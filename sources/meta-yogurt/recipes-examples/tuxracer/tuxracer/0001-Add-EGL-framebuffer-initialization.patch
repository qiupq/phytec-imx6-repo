From b33c33159ac1846a94b4ac8681adc06b00f3ce1a Mon Sep 17 00:00:00 2001
From: Wadim Egorov <w.egorov@phytec.de>
Date: Fri, 28 Oct 2016 11:23:59 +0200
Subject: [PATCH 1/2] Add EGL framebuffer initialization

Signed-off-by: Wadim Egorov <w.egorov@phytec.de>
---
 winsys.cpp | 26 +++++++++++++++++++++++---
 1 file changed, 23 insertions(+), 3 deletions(-)

diff --git a/winsys.cpp b/winsys.cpp
index 067befe..144df4e 100644
--- a/winsys.cpp
+++ b/winsys.cpp
@@ -35,7 +35,9 @@ EGLDisplay g_eglDisplay = 0;
 EGLConfig  g_eglConfig  = 0;
 EGLContext g_eglContext = 0;
 EGLSurface g_eglSurface = 0;
+#ifndef EGL_API_FB
 Display*   g_x11Display = NULL;
+#endif
 
 static const EGLint g_configAttribs[] = {
   EGL_RED_SIZE,              COLOURDEPTH_RED_SIZE,
@@ -212,6 +214,18 @@ void CWinsys::Init () {
     SetupVideoMode (GetResolution (param.res_type));
 
 #if defined(HAVE_GL_GLES1)
+    #if defined(EGL_API_FB)
+    /* Default initializied copied from Qt sourcecode */
+    EGLNativeDisplayType native_display = EGL_DEFAULT_DISPLAY;
+    EGLNativeWindowType native_window = 0;
+
+    g_eglDisplay = eglGetDisplay(native_display);
+    if (g_eglDisplay == EGL_NO_DISPLAY)
+    {
+        printf("Unable to initialise EGL display.");
+        exit(-1);
+    }
+    #else
     // use EGL to initialise GLES
     g_x11Display = XOpenDisplay(NULL);
     if (!g_x11Display)
@@ -226,7 +240,7 @@ void CWinsys::Init () {
         printf("Unable to initialise EGL display.");
         exit(-1);
     }
-
+    #endif
     // Initialise egl
     if (!eglInitialize(g_eglDisplay, NULL, NULL))
     {
@@ -245,13 +259,18 @@ void CWinsys::Init () {
     // Get the SDL window handle
     SDL_SysWMinfo sysInfo; //Will hold our Window information
     SDL_VERSION(&sysInfo.version); //Set SDL version
+#if 0
     if(SDL_GetWMInfo(&sysInfo) <= 0)
     {
         printf("Unable to get window handle");
         exit(-1);
     }
-
+#endif
+#if defined(EGL_API_FB)
+    g_eglSurface = eglCreateWindowSurface(g_eglDisplay, g_eglConfig, native_window, 0);
+#else
     g_eglSurface = eglCreateWindowSurface(g_eglDisplay, g_eglConfig, (EGLNativeWindowType)sysInfo.info.x11.window, 0);
+#endif
     if (g_eglSurface == EGL_NO_SURFACE)
     {
         printf("Unable to create EGL surface!");
@@ -323,10 +342,11 @@ void CWinsys::Quit () {
     g_eglConfig = 0;
     eglTerminate(g_eglDisplay);
     g_eglDisplay = 0;
+#ifndef EGL_API_FB
     XCloseDisplay(g_x11Display);
     g_x11Display = NULL;
 #endif
-
+#endif
     SDL_Quit ();
     exit (0);
 }
-- 
1.9.1

